name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Extract version from tag
      id: extract_version
      run: |
        # 提取版本号（去掉v前缀）
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if version exists on PyPI
      id: check_version
      run: |
        # 检查版本是否已存在于PyPI
        if curl -s "https://pypi.org/pypi/notion2sql/${{ steps.extract_version.outputs.version }}/json" | grep -q "version"; then
          echo "version_exists=true" >> $GITHUB_OUTPUT
          echo "Version ${{ steps.extract_version.outputs.version }} already exists on PyPI"
          exit 1
        else
          echo "version_exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Update version in setup.py
      run: |
        # 更新setup.py中的版本号
        sed -i "s/version='[^']*'/version='${{ steps.extract_version.outputs.version }}'/" setup.py
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
    
    - name: Update release notes
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 获取当前release的ID
        RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$GITHUB_REF_NAME" | \
          jq -r '.id')
        
        # 更新release说明
        curl -X PATCH \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID" \
          -d "{\"body\":\"Version ${{ steps.extract_version.outputs.version }} has been published to PyPI.\n\nChanges:\n- Updated package version to ${{ steps.extract_version.outputs.version }}\"}" 